plugins {
    id 'java'
    id("com.github.spacialcircumstances.gradle-cucumber-reporting") version "0.1.25"
    id 'jacoco'
    id("org.sonarqube") version "4.4.0.3356"
    id 'maven-publish'
    id 'de.zebrajaeger.sendMail' version("0.1.1")

}
//test

group = 'com.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {

    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'




}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
cucumberReports {
    outputDir = file('build/reports/cucumber')
    buildId = '0'
    reports = files('reports/example-report.json')
}

sonarqube {


    properties {
        property ("sonar.projectKey", "UnitTest2023")
        property ("sonar.host.url", "http://localhost:9000")

    }
}
import groovy.json.JsonOutput

task notifySlack {
    doLast {
        def webhookUrl = "https://hooks.slack.com/services/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" // Remplacez par votre URL
        def message = [
                text: "üöÄ D√©ploiement termin√© avec succ√®s !"
        ]
        def jsonMessage = JsonOutput.toJson(message)

        def connection = new URL(webhookUrl).openConnection()
        connection.setRequestMethod("POST")
        connection.setDoOutput(true)
        connection.setRequestProperty("Content-Type", "application/json")
        connection.getOutputStream().write(jsonMessage.bytes)

        def responseCode = connection.getResponseCode()
        if (responseCode == 200) {
            println "Notification Slack envoy√©e avec succ√®s."
        } else {
            println "Erreur lors de l'envoi de la notification Slack : ${responseCode}"
        }
    }
}



sendMail {
    smtpServer {
        host "smtp.gmail.com"
        port 587
        user "islamrmh21@gmail.com"
        password "zqyp rtms bmcj yigh"
    }
    mail {
        from "islamrmh21@gmail.com"
        to "chatgpties210@gmail.com"

        body "Hello!!"
    }
}


javadoc {
    destinationDir = file("build/docs/javadoc")
}


publishing {
    repositories {
        maven {
            url = uri('https://mymavenrepo.com/repo/LFDQ5ddEexk0ksaZgTly/')
            credentials {
                username = 'myMavenRepo'
                password = 'Mymavenuserpass'
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
test {

    useJUnitPlatform()


    testFramework {
        useJUnit()


    }

}
